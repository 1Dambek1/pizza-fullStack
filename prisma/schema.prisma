generator client {
  provider = "prisma-client-js"
}

datasource db {
  url      = env("POSTGRES_URL")
  provider = "postgresql"
  directUrl = env("POSTGRES_URL_NON_POOLING")
}


model User {    
    id    Int    @id @default(autoincrement())
    fullName String
    email String @unique
    password String
    role UserRole @default(USER)
    verified DateTime

    provider String?
    providerId String?

    orders Order[]                 
    cart Cart?
    vereficationCode VerficationCode?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Category {
    id Int @id @default(autoincrement())
    name String @unique
    products Product[]

    
    createdAt DateTime @default(now())    
    updatedAt DateTime @updatedAt

}

model Product {
    id Int @id @default(autoincrement())
    name String
    imageURL String


    category Category  @relation(fields: [categoryId], references: [id])
    categoryId Int

    ingredients Ingredient[]

    items ProductItem[]

    createdAt DateTime @default(now())    
    updatedAt DateTime @updatedAt
}

model ProductItem {
    id Int @id @default(autoincrement())

    price Int
    size Int?
    pizzaType Int?

    product Product @relation(fields: [productId], references: [id])
    productId Int

    cartItems CartItem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model Ingredient {
    id Int @id @default(autoincrement())
    name String
    price Int
    imageURL String

    products Product[]

    cartItems CartItem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}



model Cart {
    id Int @id @default(autoincrement())
 
    user User? @relation(fields: [userId], references: [id])
    userId Int? @unique
 
    token String
 
    totalAmount Int @default(0)

    cartItems CartItem[]
 
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CartItem {
    id Int @id @default(autoincrement())
    
    productItem ProductItem @relation(fields: [productItemId], references: [id])
    productItemId Int

    cart Cart @relation(fields: [cartId], references: [id])
    cartId Int

    quantity Int

    ingridients Ingredient[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    user User? @relation(fields: [userId], references: [id])
    userId Int?

    token String

    totalAmount Int 
    status OrderStatus
    paymentId String?

    orderItems Json

    fullName String
    email String
    phone String
    address String
    comment String?    

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model VerficationCode {
    id Int @id @default(autoincrement())

    user User @relation(fields: [userId], references: [id])
    userId Int @unique

    code String
    createdAt DateTime @default(now())

    @@unique([userId, code])

}

enum OrderStatus {
    PENDING
    SUCCESS
    CANCELL
}


enum UserRole {
    USER
    ADMIN
}